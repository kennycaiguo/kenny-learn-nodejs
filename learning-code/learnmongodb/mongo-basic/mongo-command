MongoDB基本使用：
打开MongoDB数据库：打开cmd窗口，输入mongo
1.查看数据库：show databases 或者show dbs;回车
2.创建或者切换到指定数据库use 数据库名，如： use company，如果数据库不存在，就会创建一个新的同名数据库
2.1 插入数据：db.emp.insert(),格式：db.集合名称.insert(键：值，键：值...),如果集合
2.2 修改集合名称，使用“db.旧原集合名.renameCollection('新集合名');”命令修改集合名称
3.查看指定数据库的所有记录：
 db.集合名称.find() ,如：db.emp.find()(假设company数据库有一个名叫emp的集合，注意这里不能使用company.emp,需要使用db代替）
如果你想通过更清晰的方式查看此数据，只需在其末尾添加 .pretty() 即可。这将以漂亮的 JSON 格式显示文档。
如：db.emp.find().pretty()
无论何时插入文档，MongoDB 都会自动添加一个 _id 字段。该字段唯一地标识每个文档。如果你不想显示它，只需运行以下命令：

如：db.emp.find({}, _id: 0).pretty()

4.如果要显示某些特定文档，则可以指定要显示的文档的单个详细信息。

db.emp.find(
  {
    name: "emily "
  }
)


5.假设你只想显示年龄在 25 岁以下的人。您可以使用 $lt 对此进行过滤。

db.emp.find(
  {
    age : {$lt : 25}
  }
)
6.同样，$gt 表示大于，$lte 表示“小于或等于”，$gte 表示“大于或等于”，$ne 是“不等于”。
7.传入数据db.集合名称.inset({})

8. 更新文档
假设你想更新某人的地址或年龄，该怎么做？ 请看下一个例子：

db.emp.update({age : 20}, {$set: {age: 23}})
第一个参数是要更新哪个文档的字段。在这里，我为简单起见指定了 age。在生产环境中，你可以使用 _id 字段。

如果你需要从单个文档中删除某个属性，则可以执行以下操作（假设你希望删除 age）：

db.emp.update({name: "emily"}, {$unset: age});

9. 删除一个文档
db.emp.remove({name: "Jackline"});

10. 删除一个集合
db.emp.remove({});

11.新建数据库 use 数据库名称，如果指定的数据库不存在就会新建
12.删除数据库：1）use 需要删除的数据库名称 2）db.dropDatabase()
13.新建集合：最简单的方法 db.需要创建的集合名称.insert(文档数据)，这样就创建了集合并且插入了数据
14，集合重命名：db.就集合.renameCollection(新集合名称)
15.删除集合：db.集合名称.drop()